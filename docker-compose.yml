version: "3.8"

services:
  postgresdb:
    image: postgres
    restart: unless-stopped
    env_file: ./.env
    environment:
      - POSTGRES_USER=$POSTGRESDB_USER
      - POSTGRES_PASSWORD=$POSTGRESDB_ROOT_PASSWORD
      - POSTGRES_DB=$POSTGRESDB_DATABASE
    ports:
      - $POSTGRESDB_LOCAL_PORT:$POSTGRESDB_DOCKER_PORT
    volumes:
      - db:/var/lib/postgres
  app:
    depends_on:
      - postgresdb
    build: ./backend/app
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
      - "4000:4000"
    environment:
      - DB_HOST=postgresdb
      - DB_USER=$POSTGRESDB_USER
      - DB_PASSWORD=$POSTGRESDB_ROOT_PASSWORD
      - DB_NAME=$POSTGRESDB_DATABASE
      - DB_PORT=$POSTGRESDB_DOCKER_PORT
    stdin_open: true
    tty: true
    develop:
      watch:
        - action: sync
          path: ./backend/app
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - postgresdb
    ports:
      - "5555:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    restart: unless-stopped

  frontend:
    depends_on:
      - postgresdb
    build: ./frontend/app
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $REACT_PORT:$REACT_PORT
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    stdin_open: true
    tty: true
    develop:
      watch:
        - action: sync
          path: ./frontend/app
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
volumes:
  db:
